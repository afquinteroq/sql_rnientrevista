CREATE OR REPLACE PACKAGE GIC_N_CARACTERIZACION IS

  -- Author  : LEANDRO.ARCILA, JAIME LOBATON
  -- Created : 27/03/2014 09:05:33 a.m.
  -- Purpose : VERSION 2 DE CARACTERIZACION

--INSERTA LAS RESPUESTAS DE LA ENCUESTA  
PROCEDURE SP_SET_RESPUESTAS_DE_ENCUESTA(pcod_hogar in varchar2,pper_IdPersona in NUMBER,pres_IdRespuesta in NUMBER,
prxp_TextoRespuesta in varchar2,prxp_TipoPreguntaRespuesta in varchar2,pins_IdInstrumento in number,
pusu_UsuarioCreacion in varchar2,pper_idPreguntaPadre in number,pbandera in number);

--COMPRUEBA VALDIADOR DE LA PREGUNTA Y TRAE EL ID DEL VALIDADOR
FUNCTION FN_COMPROBARVALIDACION(pIDRESPUESTA in integer) return integer ;

--Buscar las preguntas derivadas de una respuesta y las guarda en GIC_N_RESPUESTASDERIVADAS
PROCEDURE SP_SET_PREGUNTAS_DERIVADAS(pHOG_CODIGO IN VARCHAR2,pPER_IDPERSONA IN NUMBER,pINS_IDINSTRUMENTO IN NUMBER,
  pId_RespuestaEncuesta IN NUMBER,pId_PreguntaPadre IN NUMBER);

--VALIDAR PERSONA 
--FUNCTION FN_VALIDARPERSONA(VALOR IN VARCHAR2, IDPERSONA IN NUMBER, pVAL_IDVALIDADOR IN NUMBER) RETURN INTEGER;
FUNCTION FN_VALIDARPERSONA(VALOR IN VARCHAR2, pVAL_IDVALIDADOR IN NUMBER) RETURN INTEGER;
--ELIMINA LA PREGUNTA DERIVADA ANTERIOR
PROCEDURE SP_BORRARPREGUNTASANTERIORES(pHOG_CODIGO IN VARCHAR2, pPER_IDPERSONA IN NUMBER, pINS_IDINSTRUMENTO IN NUMBER,
  pID_PREGUNTA IN NUMBER);
  
--TRAE LA SIGUIENTE PREGUNTA
PROCEDURE SP_BUSCAR_SIGUIENTE_PREGUNTA(pHOG_CODIGO IN VARCHAR2, pID_TEMA IN NUMBER,  pINS_IDINSTRUMENTO IN NUMBER,  pID_PREGUNTA IN NUMBER,
  cur_OUT OUT SYS_REFCURSOR);

--BUSCA LA PREGUNTA ANTERIORMENTE GUARDADA
PROCEDURE SP_BUSCAR_ANTERIOR_PREGUNTA(  pHOG_CODIGO IN VARCHAR2,  pID_TEMA IN NUMBER,  pINS_IDINSTRUMENTO IN NUMBER,  pID_PREGUNTA IN NUMBER,cur_OUT OUT GIC_CURSOR.cursor_select  );
  
--CAMBIA EL ESTADO EN A GUARDADO=1
PROCEDURE SP_CAMBIAR_ESTADOGUARDADO(pHOG_CODIGO IN VARCHAR2,pINS_IDINSTRUMENTO IN NUMBER,pPER_IDPERSONA IN NUMBER,pRES_IDRESPUESTA IN NUMBER);

--ELIMINAR PREGUNTAS DERIVADAS :ACCION ANTERIOR
PROCEDURE SP_SET_LIMPIAR_PRE_DERIVADAS( pRES_IDRESPUESTANTERIOR IN NUMBER,pHOG_CODIGO IN VARCHAR2, pID_TEMA IN NUMBER, pTIPO IN NUMBER,   pIDPREGUNTA IN NUMBER,pIDPREGUNTAACTUAL IN NUMBER );

--TRAE LAS RESPUESTAS A LA PREGUNTA 
PROCEDURE SP_GET_RESPUESTASXPREGUNTA(pPRE_IDPREGUNTA IN NUMBER, cur_OUT OUT SYS_REFCURSOR);

--TRAE LAS PERSONAS QUE CUMPLAN LAS VALIDACIONES Y LAS CONDICIONES
PROCEDURE SP_GET_TRAERPERSONAS(pPRE_IDPREGUNTA IN NUMBER,pHOG_CODIGO IN VARCHAR2,pINS_IDINSTRUMENTO IN NUMBER,cur_OUT OUT GIC_CURSOR.cursor_select);

PROCEDURE SP_GET_HOGARXCODIGO(pHOG_CODIGO IN VARCHAR2,cur_OUT OUT GIC_CURSOR.cursor_select);

--Genera codigo aleatoria de 5 caracteres
FUNCTION FN_GET_GENERAR_CODIGO_ENCUESTA RETURN VARCHAR2;  

FUNCTION FN_GET_CODIGOENCUESTA RETURN VARCHAR2;

FUNCTION FN_COMPROBARVALIDACIONES(pPER_IDPERSONA IN NUMBER, pPRE_IDPREGUNTA IN NUMBER,pHOG_CODIGO IN VARCHAR, pINS_IDINSTRUMENTO IN NUMBER) RETURN INTEGER;

--DEVUELVE EL MAXIMO PRE_IDPREGUNTA DE UN TEMA
FUNCTION FN_GET_MAXPRENTASXTEMA(pIDTEMA IN INTEGER) RETURN INTEGER;

--ACTUALIZA LOS NOMBRES POR DEFECTO
PROCEDURE SP_ACTUALIZARNOMBRES
(pNombre1 IN VARCHAR2,pNombre2 IN VARCHAR2,pApellido1 IN VARCHAR2,pApellido2 IN VARCHAR2,pIdPersona IN VARCHAR2);

--INSERTA REGISTRO CUANDO SE FINALIZA UN CAPITULO
PROCEDURE SP_FINALIZARCAPITULO(pcodHogar IN VARCHAR2,pidTema IN NUMBER,pusuario IN VARCHAR2);


--ELIMINA REGISTRO DE FINALIZACION DE UN CAPITULO
PROCEDURE SP_ELIMINARFINALIZARCAPITULO(pcodHogar IN VARCHAR2,pidTema IN NUMBER, pUsuario IN VARCHAR2);  

--ACTUALIZA EL ESTADO DE LA ENCUESTA EN LA TABLA GIC_N_ESTADO_ENCUESTA
PROCEDURE SP_ACTUALIZAR_ESTADO_ENCUESTA
(HOGCODIGO IN VARCHAR2, USUARIO IN VARCHAR2, TIPO_APLAZAMIENTO IN VARCHAR2);
--CONSULTA EL ESTADO DE LA ENCUESTA EN LA TABLA GIC_N_ESTADO_ENCUESTA
--Agregado Andres Quintero el 14/05/2019
PROCEDURE SP_CONSULTAR_ESTADO_ENCUESTA
(HOGCODIGO IN VARCHAR2, IDUSUARIO IN VARCHAR2, IDPERFILUSUARIO IN VARCHAR2,cur_OUT OUT GIC_CURSOR.cursor_select);

--ELIMINA LA ENCUESTA DE LA BASE DE DATOS
PROCEDURE SP_ELIMINAR_ENCUESTA (HOGCODIGO IN VARCHAR2, USUARIO IN VARCHAR2);

--VERIFICA SI YA SE DILIGENCIARON TODOS LOS CAPITULOS Y ACTUALIZA EL ESTADO DE LA ENCUESTA A FINALIZADA
PROCEDURE SP_VERIFICARFINALIZARENCUESTA (HOGCODIGO IN VARCHAR2, USUARIO IN VARCHAR2);

--RETORNA EL CODIGO DEL HOGAR SI EL USUARIO TIENE UNA EN ESTADO 'ACTIVA'
FUNCTION FN_ENCUESTAACTIVA (USUARIO IN VARCHAR2) RETURN VARCHAR2;

--RETORNA LA CANTIDAD DE CAPITULOS TERMINADOS QUE TIENE UNA ENCUESTA
FUNCTION FN_NUMERO_CAPITULOS_TER (HOGCODIGO IN VARCHAR2) RETURN INTEGER;

--DEVUELVE UN LISTADO DE RESPUESTAS DE UNA ENCUESTA DISCRIMINADAS POR PERSONA Y POR TEMA
PROCEDURE SP_RESPUESTAS_ENCUESTA (HOGCODIGO IN VARCHAR2, cur_OUT OUT gic_cursor.cursor_select);

--TRAE LAS RESPUESTAS GUARDADAS 
PROCEDURE SP_GET_RESPUESTAXPREGUNTA ( COD_HOGAR IN VARCHAR2, IDTEMA IN NUMBER, cur_OUT OUT SYS_REFCURSOR);

--COMPRUEBA SI EL TEMA YA ESTA FINALIZADO
PROCEDURE SP_GET_TEMAFINALIZADO( pIDTEMA IN NUMBER, pCOD_HOGAR IN VARCHAR2,  cur_OUT OUT gic_cursor.cursor_select);

--RETORNA ESTADO QUE TIENE UNA ENCUESTA
FUNCTION FN_ESTADO_ENCUESTA (HOGCODIGO IN VARCHAR2) RETURN VARCHAR2;

--RETORNA ID DE UNA ENCUESTA
FUNCTION FN_ID_ENCUESTA (HOGCODIGO IN VARCHAR2) RETURN VARCHAR2;

--RETORNA USUARIO DE CREACION DE UNA ENCUESTA
FUNCTION FN_USUARIOCREACION_ENCUESTA (HOGCODIGO IN VARCHAR2) RETURN VARCHAR2;

--TRAE MAXIMO PREGUNTA PADRE DE LA TABLA PREGUNTAS DERIVADAS
PROCEDURE SP_GET_MAXPREGUNTAPADRE( pCOD_HOGAR IN VARCHAR2,pIDTEMA IN NUMBER, cur_OUT OUT SYS_REFCURSOR);

--VALIDAR QUE CAPITULOS ESTAN TERMINADOS, NO EMPEZADOS
PROCEDURE SP_VALIDARTEMASINGRESO(  pCOD_HOGAR IN VARCHAR2,   cur_OUT OUT SYS_REFCURSOR);

--TRAER MIEMBROS DEL HOGAR
PROCEDURE SP_GET_MIEMBROSHOGAR( pCOD_HOGAR IN VARCHAR2,   cur_OUT OUT gic_cursor.cursor_select  );

--BORRADO RESPUESTAS
PROCEDURE SP_BORRADORESPUESTAS (pcod_hogar in varchar2,pins_IdInstrumento in number,pId_Respuesta in number,pper_idPersona in number);
--SIGUIENTE PREGUNTA CONSULTA
PROCEDURE SP_BUSCAR_SIGCONSULTA(  pHOG_CODIGO IN VARCHAR2,  pID_TEMA IN NUMBER,  pINS_IDINSTRUMENTO IN NUMBER,  pID_PREGUNTA IN NUMBER,  cur_OUT OUT GIC_CURSOR.cursor_select  );

--BUSCA LA PREGUNTA ANTERIORMENTE GUARDADA CONSULTA
PROCEDURE SP_BUSCAR_ANTPREGUNCONSULTA(  pHOG_CODIGO IN VARCHAR2,  pID_TEMA IN NUMBER,  pINS_IDINSTRUMENTO IN NUMBER,  pID_PREGUNTA IN NUMBER,  cur_OUT OUT GIC_CURSOR.cursor_select);

--VERIFICA SI EXISTE LA PREGUNTA
FUNCTION FN_VERIFICARRESPUESTA( pHOG_CODIGO IN VARCHAR2,  pINS_IDINSTRUMENTO IN NUMBER,  pID_RESPUESTA IN NUMBER,  pID_PERSONA IN NUMBER, PDepartamento IN NVARCHAR2)     RETURN BOOLEAN;

FUNCTION FN_TRAETIPOCAMPO(  pID_RESPUESTA IN NUMBER)  RETURN NVARCHAR2 ;

--COMPRUEBA SI LA ENCUESTA  YA ESTA FINALIZADA
PROCEDURE SP_GET_ENCUESTAFINALIZADO( pCOD_HOGAR IN VARCHAR2, cur_OUT OUT gic_cursor.cursor_select);

--COMPRUEBA SI YA SE LLENARON LOS TRES PRIMEROS CAPITULOS PARA HABIITAR LOSD EMAS
PROCEDURE SP_GET_HABILITARCAPITULOS(  pCOD_HOGAR IN VARCHAR2, cur_OUT OUT SYS_REFCURSOR);

--BORRAR NOMBRES VACIOS
PROCEDURE SP_BORRARNOMVACIOS(phogCodigo IN VARCHAR2,pidRespuesta IN NUMBER, pIdPersona IN NUMBER,pIdInstrumento IN NUMBER);

--CONCATENAR CODIGOS ENCUESTA POR USUARIO
FUNCTION FN_GET_MIEXHOGAR(pCODIGO IN VARCHAR2)   RETURN VARCHAR2;

--DEVUELVE TODOS LOS CODIGOS ASOCIADOS A ESE USUARIO
PROCEDURE SP_REPORTE_MIEMBROSXCODIGO(  pUSUARIO IN VARCHAR2, cur_OUT OUT gic_cursor.cursor_select);

--DEVUELVE TODOS LOS CODIGOS ASOCIADOS A ESE USUARIO
PROCEDURE SP_REPORTE_MIEMBROSXCODIGO_2(  pUSUARIO IN VARCHAR2, cur_OUT OUT gic_cursor.cursor_select);

--ELIMINAR RESPUESTAS DE PREGUNTAS FUERA DEL FLUJO
PROCEDURE SP_SET_ELIMINAR_RESP_ENCUESTA (pHOG_CODIGO IN VARCHAR2,pID_TEMA IN NUMBER,pINS_IDINSTRUMENTO IN NUMBER);

--ELIMINAR RESPUESTAS DE PREGUNTAS HIJAS
PROCEDURE SP_BORRAR_PREG_DERIV (pID_PREGUNTA_act NUMBER,  pHOG_CODIGO IN VARCHAR2,  pID_TEMA IN NUMBER,  pINS_IDINSTRUMENTO IN NUMBER); 

--DEVUELVE LA EDAD  A PARTIR  DE LA FECHA NACIMIENTO POR PERSONA
FUNCTION FN_GET_EDADXPERSONA(pIDPERSONA IN INTEGER, pCODHOGAR IN VARCHAR2) RETURN INTEGER;

--INSERTA ARCHVIO COLILLA
PROCEDURE SP_INSERTA_ARCHIVO  (  pHOG_CODIGO IN VARCHAR2,  pARC_URL IN VARCHAR2,  pUSU_CREACION IN VARCHAR2    )   ;

--INSERTAR Y DEVUELVE  HOGAR 
FUNCTION GET_CODIGOHOGAR  (    USUA_CREACION IN NVARCHAR2,    ID_USUARIO IN INTEGER )  RETURN VARCHAR2;

 --CARGA AUTOCOMPLETAR TEXTOS
PROCEDURE SP_CARGAUTOCOMPLETAR(pIDPREGUNTA IN INTEGER,pFILTRO IN NVARCHAR2, cur_OUT OUT ACCIONSOCIAL.cursor_select);

   --CARGA AUTOCOMPLETAR TEXTOS TOTAL
PROCEDURE SP_CARGAUTOCOMPLETARTOTAL(pIDPREGUNTA IN INTEGER, CURSOR_OUT OUT ACCIONSOCIAL.cursor_select);

-- VALIDAR GIC_N_VALIDADORESXRESPUESTA
FUNCTION FN_VALIDARXRESPUESTA(pHOG_CODIGO IN VARCHAR2, pID_PREGUNTA IN NUMBER, pID_RESPUESTA IN NUMBER,  pID_PERSONA IN NUMBER, pINS_IDINSTRUMENTO IN NUMBER)RETURN NUMBER;

--VALIDAR RESPUESTA DE AUTOCOMPELTAR
PROCEDURE SP_VALRESAUTOCOMPLETAR(TEXTO IN VARCHAR2, CURSOR_OUT OUT ACCIONSOCIAL.cursor_select);

-- VALIDAR PREGUNTA DE ACUERDO A CONDICIONES DIFERENTES A AND
FUNCTION FN_VALIDARXPREGUNTA(pHOG_CODIGO IN VARCHAR2, pID_PREGUNTA IN NUMBER, pID_PERSONA IN NUMBER, pINS_IDINSTRUMENTO IN NUMBER)RETURN NUMBER;

--BORRADO VALIDADORES
PROCEDURE SP_BORRADOVALIDADORES (pcod_hogar in varchar2,pins_IdInstrumento in number,pId_Pregunta in number,pper_idPersona in number);

--COMPROBAR VALIDACIONES PARA LAS RESPUESTAS
FUNCTION FN_COMPROBARVALIDACIONESRESP(pPER_IDPERSONA IN NUMBER, pRES_IDRESPUESTA IN NUMBER,pHOG_CODIGO IN VARCHAR, pINS_IDINSTRUMENTO IN NUMBER) RETURN INTEGER;

--TRAE LAS RESPUESTAS A LA PREGUNTA 
PROCEDURE SP_GET_RESPUESTASXPREMOD   (     pPRE_IDPREGUNTA IN NUMBER,     pINS_IDINSTRUMENTO IN NUMBER,     pHOG_CODIGO IN VARCHAR,     pPER_IDPERSONA IN NUMBER,      cur_OUT OUT GIC_CURSOR.cursor_select  );

PROCEDURE SP_GET_RESPUESTASVALXCONTEO  ( pPRE_IDPREGUNTA IN NUMBER, pINS_IDINSTRUMENTO IN NUMBER,  pHOG_CODIGO IN VARCHAR,  pPER_IDPERSONA IN NUMBER, cur_OUT OUT GIC_CURSOR.cursor_select);

--LAS RESPUETAS QUE DEVUELVE NO SE MUESTRAN EN LA PREGUNTA
PROCEDURE SP_GET_RESPUESTANO   (  pPRE_IDPREGUNTA IN NUMBER,     pINS_IDINSTRUMENTO IN NUMBER, pIDTEMA IN NUMBER,    pHOG_CODIGO IN VARCHAR,  pRESPUESTASN OUT VARCHAR2);


--DEVUELVE EL ID VALIDADOR DE UN CONJUNTO DE VALIDADORES SEPARADOS POR COMA ','
FUNCTION GetToken(stringvalues IN VARCHAR2,indice IN NUMBER, delim IN VARCHAR2 )RETURN VARCHAR2;

--DEVUELVE CUARTOS POR HOGAR 
--FUNCTION FN_GET_CUARTOSPORHOGAR(pIDPERSONA IN INTEGER, pCODHOGAR IN VARCHAR2) RETURN INTEGER;

PROCEDURE SP_GET_PREGUNTAS(pINS_IDINSTRUMENTO IN NUMBER,
     pHOG_CODIGO IN VARCHAR,
     pId_Tema IN NVARCHAR2,
     pPER_IDPERSONA IN NUMBER,
     pId_RespuestaEncuesta NVARCHAR2,
     pId_PreguntaPadre IN NUMBER,     
     pTipo_valres IN NUMBER );


--16/02/2020 
--PROCEDURE GIC_SP_OBDEPTOPORDT(Id_dt In Number, cur_OUT OUT accionsocial.cursor_select);

PROCEDURE GIC_SP_OBDEPTOPORDT(pHogar_Codigo NVARCHAR2,Id_dt In Number, cur_OUT OUT accionsocial.cursor_select);
PROCEDURE GIC_SP_OBTDT(Id_depto In Number, cur_OUT OUT accionsocial.cursor_select);
--16/02/2020 
PROCEDURE GIC_SP_OBTPUNTOATECION(pHogar_Codigo NVARCHAR2,Id_DT In Number, cur_OUT OUT accionsocial.cursor_select);
PROCEDURE GIC_SP_OBMUNICIPIOATECION(pHogar_Codigo NVARCHAR2,Id_PT In Number, cur_OUT OUT accionsocial.cursor_select);
PROCEDURE GIC_SP_GUARDAMUNATEN(pHogar_Codigo NVARCHAR2,Id_MA In Number, cur_OUT OUT accionsocial.cursor_select);

--08/01/2020    
--INSERTA ARCHVIO SOPORTES TUTOR Y CUIDADOR PERMANENTE
PROCEDURE SP_INSERTA_SOPORTES  (  
  pHOG_CODIGO IN VARCHAR2, 
  pGuid IN VARCHAR2,
  pARC_URL IN VARCHAR2, 
  pUSU_CREACION IN VARCHAR2,
  pTipopersona IN NVARCHAR2,
   pSalida out NVARCHAR2  )   ;
   
--08/01/2020   
--ACTUALIZA CODIGO DE HOGAR SOPORTES TUTOR Y CUIDADOR PERMANENTE
PROCEDURE SP_UPDATE_SOPORTES  (  
  pHOG_CODIGO IN VARCHAR2,
  psys_guid IN VARCHAR2,
  pSalida out NVARCHAR2  )   ;


PROCEDURE CERRAR_ENCUESTA(
  pHOG_CODIGO IN VARCHAR2,
  RESULT out NVARCHAR2  
  );
  
--08/01/2020
FUNCTION FN_RETORNA_TIPO_PERSONA (pIdPersona IN INTEGER,  pHOG_CODIGO IN VARCHAR2) RETURN INTEGER;

--08/01/2020
PROCEDURE SP_INS_ETNIA_ARES(CODHOGAR IN  NVARCHAR2 );

--08/01/2020
PROCEDURE SP_CONSTANCIA(COD_HOGAR IN  NVARCHAR2,cur_OUT OUT gic_cursor.cursor_select );

--08/01/2020
--INSERTA ARCHVIO COLILLA
PROCEDURE SP_INSERTA_CONSTA_FIRMADA_SAAH  (  pHOG_CODIGO IN VARCHAR2,  pARC_URL IN VARCHAR2,  pUSU_CREACION IN VARCHAR2    )   ;

--08/01/2020
--DEVUELVE TIPOPERSONA  A PARTIR  DEL CODIGO DE HOGAR Y EL IDPERSONA 06/01/2020 ANDRES QUINTERO
FUNCTION FN_GET_TIPOPERSONA(pIDPERSONA IN INTEGER, pCODHOGAR IN VARCHAR2) RETURN INTEGER;

--14/01/2020
FUNCTION FN_GET_TOTALCUARTOSXFAMILIA(pIDPERSONA IN INTEGER, pCODHOGAR IN VARCHAR2) RETURN INTEGER;

--06/02/2020
--VERIFICA QUE EXISTA HOGAR CERRADO PARA GENERAR LA CONSTANCIA
FUNCTION FN_GET_HOGAR_CERRAD_CONSTANCIA(pCODHOGAR IN VARCHAR2)RETURN NUMBER;

--DEVUELVE EL GRUPO FAMILIAR POR CODIGO DEGHOAR
PROCEDURE SP_REPORTE_XHOGAR(  pCODHOGAR IN VARCHAR2, cur_OUT OUT gic_cursor.cursor_select);
PROCEDURE SP_REPORTE_XHOGAR_RENC(  pCODHOGAR IN VARCHAR2, cur_OUT OUT gic_cursor.cursor_select);
PROCEDURE SP_REPORTE_XHOGAR_REN(  pCODHOGAR IN VARCHAR2, cur_OUT OUT gic_cursor.cursor_select);

END GIC_N_CARACTERIZACION;
 

 